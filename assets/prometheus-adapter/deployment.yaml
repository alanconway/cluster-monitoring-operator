apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: metrics-adapter
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus-adapter
    app.kubernetes.io/part-of: openshift-monitoring
    app.kubernetes.io/version: 0.11.2
  name: prometheus-adapter
  namespace: openshift-monitoring
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: metrics-adapter
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/part-of: openshift-monitoring
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        checksum.config/md5: c7fb4696aad1a53eaad3f90f16b9905b
        openshift.io/required-scc: restricted-v2
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app.kubernetes.io/component: metrics-adapter
        app.kubernetes.io/managed-by: cluster-monitoring-operator
        app.kubernetes.io/name: prometheus-adapter
        app.kubernetes.io/part-of: openshift-monitoring
        app.kubernetes.io/version: 0.11.2
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: metrics-adapter
                app.kubernetes.io/name: prometheus-adapter
                app.kubernetes.io/part-of: openshift-monitoring
            namespaces:
            - openshift-monitoring
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --prometheus-auth-config=/etc/prometheus-config/prometheus-config.yaml
        - --config=/etc/adapter/config.yaml
        - --metrics-relist-interval=1m
        - --prometheus-url=https://prometheus-k8s.openshift-monitoring.svc:9091
        - --secure-port=6443
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - --disable-http2
        image: kubernetes-sigs/prometheus-adapter:v0.11.2
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          periodSeconds: 5
        name: prometheus-adapter
        ports:
        - containerPort: 6443
          name: https
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          periodSeconds: 5
        resources:
          requests:
            cpu: 1m
            memory: 40Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 18
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          periodSeconds: 10
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmpfs
          readOnly: false
        - mountPath: /etc/adapter
          name: config
          readOnly: false
        - mountPath: /etc/prometheus-config
          name: prometheus-adapter-prometheus-config
          readOnly: false
        - mountPath: /etc/ssl/certs
          name: serving-certs-ca-bundle
          readOnly: false
        - mountPath: /etc/audit
          name: prometheus-adapter-audit-profiles
          readOnly: true
        - mountPath: /var/log/adapter
          name: audit-log
          readOnly: false
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      securityContext: {}
      serviceAccountName: prometheus-adapter
      volumes:
      - emptyDir: {}
        name: tmpfs
      - configMap:
          name: adapter-config
        name: config
      - configMap:
          name: prometheus-adapter-prometheus-config
        name: prometheus-adapter-prometheus-config
      - configmap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: serving-certs-ca-bundle
        name: serving-certs-ca-bundle
      - emptyDir: {}
        name: audit-log
      - configMap:
          name: prometheus-adapter-audit-profiles
        name: prometheus-adapter-audit-profiles
